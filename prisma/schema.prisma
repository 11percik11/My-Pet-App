// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  password String
  email    String    @unique
  name     String
  phone    String
  products Product[]
  likes    Like[]
  comments Comment[]
  conversation Conversation[]
  message  Message[]
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  price       Float
  likes       Like[]
  comments    Comment[]
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
}

model Conversation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userIdTwo String   @db.ObjectId
  usertwo   User     @relation(fields: [userIdTwo], references: [id])
  messages  Message[]
}

model Message {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  text            String
  createdAt       DateTime       @default(now())
  userId          String         @db.ObjectId
  user            User           @relation(fields: [userId], references: [id])
  conversationId  String         @db.ObjectId
  conversation    Conversation   @relation(fields: [conversationId], references: [id])
}